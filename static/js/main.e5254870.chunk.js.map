{"version":3,"sources":["components/Square.js","components/Board.js","functions/calculateWinner.js","components/Game.js","index.js"],"names":["Square","props","className","onClick","value","Board","squareIndex","console","log","this","squares","renderSquare","React","Component","calculateWinner","lines","i","length","a","b","c","Game","state","hystory","Array","fill","xIsNext","stepNumber","current","slice","setState","concat","step","status","winner","moves","map","turn","index","desc","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5254870.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default  function Square (props){\r\n      return (\r\n        <button className=\"square\" onClick={props.onClick}>\r\n          {props.value}\r\n        </button>\r\n      );\r\n  };","import React from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nexport default class Board extends React.Component {\r\n    renderSquare(squareIndex) {\r\n      console.log(\"rendering...\", this.props.squares[squareIndex]);\r\n      return <Square value={this.props.squares[squareIndex]} onClick={() => this.props.onClick(squareIndex)} />;\r\n    }\r\n    render() {\r\n      return (\r\n        <div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }","export default function calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","import React from \"react\";\r\nimport Board from \"./Board\";\r\nimport calculateWinner from \"../functions/calculateWinner\";\r\n\r\nexport default class Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hystory: [\r\n        {\r\n          squares: Array(9).fill(null),\r\n        },\r\n      ],\r\n      xIsNext: true,\r\n      stepNumber: 0,\r\n    };\r\n  }\r\n\r\n  handleClick(squareIndex) {\r\n    const hystory = this.state.hystory;\r\n    const current = hystory[this.state.stepNumber];\r\n    console.log(this.state.stepNumber, \"<<<<<\");\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[squareIndex]) {\r\n      return;\r\n    }\r\n    squares[squareIndex] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      hystory: hystory.concat([\r\n        {\r\n          squares: squares,\r\n        },\r\n      ]),\r\n      xIsNext: !this.state.xIsNext,\r\n      stepNumber: hystory.length\r\n    });\r\n  }\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext : (step % 2) === 0,\r\n    })\r\n    console.log(this.state.stepNumber, \"<<<<<\");\r\n  }\r\n\r\n  render() {\r\n    const hystory = this.state.hystory;\r\n    const current = hystory[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = hystory.map((turn, index) => {\r\n      const desc = index ? \"go to move #\" + index : \"go to game start\";\r\n\r\n      return (\r\n        <li key={index}>\r\n          <button onClick={() => this.jumpTo(index)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Game from \"./components/Game\"\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}